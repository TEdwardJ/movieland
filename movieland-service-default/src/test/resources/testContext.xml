<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/cache
                           http://www.springframework.org/schema/cache/spring-cache.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/task/spring-task.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jdbc
                           http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">
    <context:property-placeholder location="classpath:testApplication.properties" ignore-unresolvable="true"/>
    <context:component-scan base-package="edu.eteslenko.movieland.dao"/>
    <context:component-scan base-package="edu.eteslenko.movieland.service"/>
    <task:annotation-driven scheduler="myScheduler"/>
    <task:scheduler id="myScheduler" pool-size="3"/>
    <jdbc:embedded-database id="dataSource" type="H2">
    </jdbc:embedded-database>
    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource" />
        <property name="changeLog" value="classpath:db-changelog.xml" />
        <property name="contexts" value="test" />
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" depends-on="liquibase">
        <constructor-arg><ref bean="dataSource"/></constructor-arg>
    </bean>
    <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg><ref bean="dataSource"/></constructor-arg>
    </bean>
    <bean id="movieSelectAllQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT m.m_id, m_title, m_title_en, m_price, m_release_year, m_description, m_rating, picture_url FROM movie.v_movie_ui as m;"/>
    </bean>
    <bean id="movieSelectThreeRandomQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT m.m_id, m_title, m_title_en, m_price, m_release_year, m_description, m_rating, picture_url FROM movie.v_movie_ui as m ORDER BY RANDOM() LIMIT 3;"/>
    </bean>
    <bean id="genreSelectAllQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT gnr_id, gnr_name FROM movie.genre;"/>
    </bean>
    <bean id="countrySelectAllQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT cntr_id, cntr_name FROM movie.country;"/>
    </bean>
    <bean id="movieSelectByGenreQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT m_id, m_title, m_title_en, m_price,m_release_year,m_description, m_rating, picture_url FROM movie.v_movie_genre_ui mg WHERE gnr_id = ?;"/>
    </bean>
    <bean id="movieSelectByIdQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT m_id, m_title, m_title_en, m_price, m_release_year, m_description, m_rating, picture_url FROM movie.v_movie_ui mg WHERE m_id = ?;"/>
    </bean>
    <bean id="genreSelectByMovieIdQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT gnr_id, gnr_name FROM movie.v_all_movie_genres_ui mg WHERE mg.m_id = ?;"/>
    </bean>
    <bean id="countrySelectByMovieIdQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT cntr_id, cntr_name FROM movie.v_all_movie_countries_ui mc WHERE mc.m_id = ?;"/>
    </bean>
    <bean id="testObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"
          p:indentOutput="true"
          p:defaultViewInclusion="false"
          p:autoDetectFields="false"
          p:simpleDateFormat="dd.MM.yyyy" lazy-init="true"/>
    <bean id="converter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" lazy-init="true">
        <property name="objectMapper" ref="testObjectMapper"/>
    </bean>
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate" lazy-init="true">
        <constructor-arg>
            <list>
                <ref bean="converter"/>
            </list>
        </constructor-arg>
    </bean>
</beans>