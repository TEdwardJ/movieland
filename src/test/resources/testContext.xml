<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">
    <context:component-scan base-package="edu.eteslenko.movieland.service"/>
    <context:component-scan base-package="edu.eteslenko.movieland.dao"/>
    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:db/sql/create-db.sql"/>
        <jdbc:script location="classpath:db/sql/insert-data.sql"/>
    </jdbc:embedded-database>

    <bean id="movieSelectAllQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT m.m_id, m_title, m_title_en, m_price, m_release_year, m_description, m_rating, picture_url FROM movie.v_movie_ui as m;"/>
    </bean>
    <bean id="movieSelect3RandomQuery" class="java.lang.String">
        <constructor-arg
                value="SELECT m.m_id, m_title, m_title_en, m_price, m_release_year, m_description, m_rating, picture_url FROM movie.v_movie_ui as m ORDER BY RANDOM() LIMIT 3;"/>
    </bean>
</beans>